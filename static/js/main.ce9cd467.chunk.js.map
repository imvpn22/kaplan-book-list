{"version":3,"sources":["components/BookCard.js","components/Popup.js","components/NewBook.js","actionTypes.js","actions/index.js","components/BookList.js","App.js","store/initialState.js","reportWebVitals.js","enhancers/monitorReducers.js","middlewares/logger.js","reducers/books.js","reducers/index.js","index.js","configureStore.js"],"names":["BookCard","props","book","className","volumeInfo","imageLinks","src","thumbnail","alt","title","authors","reduce","a","c","publisher","publishedDate","Popup","isPopupShow","onClick","closePopup","children","NewBook","state","handleTitleChange","e","setState","target","value","handleAuthorChange","handlePublisherChange","handleSubmit","preventDefault","id","Date","now","createBook","this","onSubmit","placeholder","onChange","required","type","Component","GET_BOOK_LIST_SUCCESS","GET_BOOK_LIST","getBookList","dispatch","Axios","get","res","getBookListSuccess","data","getUserData","userId","BookList","bookList","isLoading","isFailed","searchQur","actions","then","items","length","localStorage","setItem","JSON","stringify","handleQuery","replace","filterBooks","searchRe","RegExp","filter","match","openPopup","push","filteredBookList","queryText","autoFocus","isSearching","map","connect","books","bindActionCreators","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","newState","end","diff","Math","round","console","log","logger","store","next","group","info","result","getState","groupEnd","getItem","parse","combineReducers","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","compose","rootReducer","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce9cd467.chunk.js","sourcesContent":["import React from 'react';\n\nconst BookCard = props => {\n  const { book } = props;\n  return (\n    <div className=\"book-card\">\n      <div className=\"book-img\">\n        {/* Show thumbnail if book image is not available */}\n        {book.volumeInfo.imageLinks ? (\n          <img\n            src={book.volumeInfo.imageLinks.thumbnail}\n            alt={book.volumeInfo.title + ' image'}\n          />\n        ) : (\n          <i className=\"fas fa-book\"></i>\n        )}\n      </div>\n      <div className=\"book-data\">\n        <div className=\"book-title\"> {book.volumeInfo.title} </div>\n        <div className=\"book-author\">\n          {book.volumeInfo.authors.reduce((a, c) => a + ' ' + c, '')}{' '}\n        </div>\n        <div className=\"book-other\">\n          <div>Publisher: {book.volumeInfo.publisher}</div>\n          <div>Published Date: {book.volumeInfo.publishedDate}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookCard;\n","import React from 'react';\n\nconst Popup = props => {\n  return (\n    <div className={'popup-overlay ' + (props.isPopupShow ? '' : 'hidden')}>\n      <div className=\"popup-content\">\n        <div className=\"popup-title\">{props.title}</div>\n        <span className=\"close-icon\" onClick={props.closePopup}>\n          <i className=\"fa fa-times\"></i>\n        </span>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React, { Component } from 'react';\n\nclass NewBook extends Component {\n  state = {\n    title: '',\n    authors: '',\n    publisher: ''\n  };\n\n  componentDidMount() {}\n\n  handleTitleChange = e => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleAuthorChange = e => {\n    this.setState({ authors: e.target.value });\n  };\n\n  handlePublisherChange = e => {\n    this.setState({ publisher: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { title, authors, publisher } = this.state;\n    // Generate a random id, date EPOCH for now\n    const id = Date.now();\n    this.props.createBook({\n      id,\n      volumeInfo: { title, authors: [authors], publisher }\n    });\n\n    // reset form fields\n    this.setState({ title: '', authors: '', publisher: '' });\n  };\n\n  render() {\n    const { title, authors, publisher } = this.state;\n\n    return (\n      <form className=\"new-book-form\" onSubmit={this.handleSubmit}>\n        <div className=\"form-item\">\n          <label>Title :</label>\n          <input\n            value={title}\n            placeholder=\"Enter book Title\"\n            onChange={this.handleTitleChange}\n            required\n          />\n        </div>\n        <div className=\"form-item\">\n          <label>Author :</label>\n          <input\n            value={authors}\n            placeholder=\"Enter book Author\"\n            onChange={this.handleAuthorChange}\n            required\n          />\n        </div>\n        <div className=\"form-item\">\n          <label>Publisher :</label>\n          <input\n            value={publisher}\n            placeholder=\"Enter book Publisher\"\n            onChange={this.handlePublisherChange}\n            required\n          />\n        </div>\n        <div className=\"form-item new-btn-box\">\n          <button\n            type=\"submit\"\n            className=\"submit-btn\"\n            // onClick={this.handleSubmit}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default NewBook;\n","export const GET_BOOK_LIST_SUCCESS = 'GET_BOOK_LIST_SUCCESS';\nexport const GET_BOOK_LIST = 'GET_BOOK_LIST';\n","import Axios from 'axios';\nimport { GET_BOOK_LIST_SUCCESS, GET_BOOK_LIST } from '../actionTypes';\n\nexport const getBookList = () => {\n  return async dispatch => {\n    const res = await Axios.get(\n      'https://www.googleapis.com/books/v1/volumes?q=kaplan%20test%20prep'\n    );\n    dispatch(getBookListSuccess(res.data));\n    // .catch(err => console.log(err));\n  };\n};\n\nexport const getBookListSuccess = res => ({\n  type: GET_BOOK_LIST_SUCCESS,\n  res\n});\n\nexport const getUserData = userId => ({\n  type: GET_BOOK_LIST,\n  userId\n});\n","import React, { Component } from 'react';\nimport BookCard from './BookCard';\nimport Popup from './Popup';\nimport NewBook from './NewBook';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nclass BookList extends Component {\n  state = {\n    bookList: [],\n    isLoading: true,\n    isFailed: false,\n    searchQur: '',\n    isPopupShow: false\n  };\n\n  componentDidMount() {\n    // Don't make API call if data is present in localstorage\n    if (this.props.items && this.props.items.length) {\n      this.setState({ bookList: this.props.items });\n    } else {\n      this.getBookList();\n    }\n  }\n\n  getBookList = () => {\n    // Set initial state for showing loading\n    this.setState({ isLoading: true, isFailed: false });\n\n    this.props.actions.getBookList().then(() => {\n      if (this.props.items && this.props.items.length) {\n        this.setState({\n          bookList: this.props.items,\n          isLoading: false,\n          isFailed: false\n        });\n\n        // Set new data is localstorage to persist\n        localStorage.setItem('bookList', JSON.stringify(this.props.items));\n      } else {\n        this.setState({ bookList: [], isLoading: false, isFailed: true });\n      }\n    });\n  };\n\n  handleQuery = e => {\n    let searchQur = e.target.value;\n    searchQur = searchQur.replace(/[-\\\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'); // Remove escape characters\n\n    this.setState({ searchQur });\n  };\n\n  filterBooks = () => {\n    const { bookList, searchQur } = this.state;\n    const searchRe = new RegExp(searchQur, 'ig');\n\n    const filteredList = bookList.filter(book => {\n      if (\n        (book.volumeInfo.title && !!book.volumeInfo.title.match(searchRe)) ||\n        (book.volumeInfo.publisher &&\n          !!book.volumeInfo.publisher.match(searchRe)) ||\n        (book.volumeInfo.authors &&\n          book.volumeInfo.authors.length &&\n          !!book.volumeInfo.authors\n            .reduce((a, c) => a + ' ' + c, '')\n            .match(searchRe))\n      ) {\n        return true;\n      }\n      return false;\n    });\n\n    return filteredList;\n  };\n\n  openPopup = () => {\n    this.setState({ isPopupShow: true });\n  };\n\n  closePopup = () => {\n    this.setState({ isPopupShow: false });\n  };\n\n  createBook = book => {\n    const { bookList } = this.state;\n    bookList.push(book);\n    this.setState(bookList);\n    localStorage.setItem('bookList', JSON.stringify(bookList));\n    this.closePopup();\n  };\n\n  render() {\n    const { isLoading, isFailed, isPopupShow } = this.state;\n    const filteredBookList = this.filterBooks();\n\n    return (\n      <div className=\"main\">\n        <div className=\"header\">Kaplan Book List</div>\n        <div className=\"sub-header\">\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title, author, publisher\"\n              value={this.state.queryText}\n              onChange={e => this.handleQuery(e)}\n              required={true}\n              autoFocus={true}\n            />\n            <button value=\"Search\">\n              <i\n                className={\n                  this.props.isSearching\n                    ? 'fas fa-circle-notch fa-spin'\n                    : 'fas fa-search'\n                }\n              ></i>\n            </button>\n          </div>\n          <div className=\"new-btn-box\">\n            <button onClick={this.openPopup}>Create New Book</button>\n          </div>\n        </div>\n\n        <div className=\"book-list\">\n          {filteredBookList.length\n            ? filteredBookList.map(book => (\n                <BookCard key={book.id} book={book} />\n              ))\n            : isLoading\n            ? 'Loading'\n            : isFailed\n            ? 'Failed'\n            : 'No data'}\n        </div>\n\n        <Popup\n          title=\"Create New Book\"\n          isPopupShow={isPopupShow}\n          closePopup={this.closePopup}\n        >\n          <NewBook createBook={this.createBook} />\n        </Popup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.books.items\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n","import './App.scss';\nimport BookList from './components/BookList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BookList />\n    </div>\n  );\n}\n\nexport default App;\n","const bookList = localStorage.getItem('bookList');\nlet items;\ntry {\n  items = JSON.parse(bookList);\n} catch (e) {\n  items = {};\n}\n\nconst initialState = {\n  books: { items }\n};\n\nexport default initialState;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now();\n    const newState = reducer(state, action);\n    const end = performance.now();\n    const diff = round(end - start);\n\n    console.log('reducer process time:', diff);\n\n    return newState;\n  };\n\n  return createStore(monitoredReducer, initialState, enhancer);\n};\n\nexport default monitorReducerEnhancer;\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  let result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { GET_BOOK_LIST, GET_BOOK_LIST_SUCCESS } from '../actionTypes';\nimport initialState from '../store/initialState';\n\nconst books = (state = { ...initialState.books }, action) => {\n  switch (action.type) {\n    case GET_BOOK_LIST_SUCCESS:\n      console.log(action.res);\n      return { ...state, items: action.res.items };\n    case GET_BOOK_LIST:\n      return { ...state };\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","import { combineReducers } from 'redux';\nimport books from './books';\n\nexport default combineReducers({\n  books\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\nconst store = configureStore({});\n\nconst renderApp = () =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('./App', renderApp);\n}\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport monitorReducersEnhancer from './enhancers/monitorReducers';\nimport loggerMiddleware from './middlewares/logger';\nimport rootReducer from './reducers/index';\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  const composedEnhancers = compose(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}\n"],"sourceRoot":""}